name: Build Tauri App (macOS)

on:
  workflow_dispatch:
    inputs:
      deploy:
        description: "Deploy to R2"
        required: false
        type: boolean
        default: false
      production-release:
        description: "Release to GitHub"
        required: false
        type: boolean
        default: false

jobs:
  build-macos:
    permissions:
      contents: write
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - uses: oven-sh/setup-bun@v2

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: aarch64-apple-darwin,x86_64-apple-darwin

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: "./src-tauri -> target"

      - name: Install frontend dependencies
        run: bun install

      - name: Import Apple Developer Certificate
        env:
          APPLE_CERTIFICATE: ${{ secrets.APPLE_CERTIFICATE }}
          APPLE_CERTIFICATE_PASSWORD: ${{ secrets.APPLE_CERTIFICATE_PASSWORD }}
          KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
        run: |
          echo "$APPLE_CERTIFICATE" | base64 --decode > certificate.p12
          security create-keychain -p "$KEYCHAIN_PASSWORD" build.keychain
          security default-keychain -s build.keychain
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" build.keychain
          security set-keychain-settings -t 3600 -u build.keychain
          security import certificate.p12 -k build.keychain -P "$APPLE_CERTIFICATE_PASSWORD" -T /usr/bin/codesign
          security set-key-partition-list -S apple-tool:,apple:,codesign: -s -k "$KEYCHAIN_PASSWORD" build.keychain

      - name: Set Apple Signing Identity
        run: |
          CERT_INFO=$(security find-identity -v -p codesigning build.keychain | grep "Developer ID Application")
          CERT_ID=$(echo "$CERT_INFO" | awk -F'"' '{print $2}')
          echo "CERT_ID=$CERT_ID" >> $GITHUB_ENV

      - name: Build and publish Tauri app
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          APPLE_CERTIFICATE: ${{ secrets.APPLE_CERTIFICATE }}
          APPLE_CERTIFICATE_PASSWORD: ${{ secrets.APPLE_CERTIFICATE_PASSWORD }}
          APPLE_SIGNING_IDENTITY: ${{ env.CERT_ID }}
          APPLE_ID: ${{ secrets.APPLE_ID }}
          APPLE_ID_PASSWORD: ${{ secrets.APPLE_ID_PASSWORD }}
          APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
        with:
          tagName: v__VERSION__
          releaseName: "RepoSnap v__VERSION__ (macOS Universal)"
          releaseBody: "macOS universal build (.dmg)."
          releaseDraft: true
          args: "--target universal-apple-darwin --bundles app,dmg --verbose"

      - name: Get Package Version
        uses: ./.github/actions/get-version-from-package
        id: package-version

      - name: Check Artifacts
        run: |
          echo "macOS directory contents:"
          ls -la src-tauri/target/universal-apple-darwin/release/bundle/macos/
          echo "DMG directory contents:"
          ls -la src-tauri/target/universal-apple-darwin/release/bundle/dmg/

      - name: Upload to R2 (Updater Artifacts)
        if: ${{ github.event.inputs.deploy == 'true' }}
        uses: ryand56/r2-upload-action@latest
        id: r2-upload-updater
        with:
          r2-account-id: ${{ secrets.R2_ACCOUNT_ID }}
          r2-access-key-id: ${{ secrets.R2_ACCESS_KEY_ID }}
          r2-secret-access-key: ${{ secrets.R2_SECRET_ACCESS_KEY }}
          r2-bucket: ${{ secrets.R2_BUCKET }}
          source-dir: src-tauri/target/universal-apple-darwin/release/bundle/macos
          destination-dir: releases/${{ steps.package-version.outputs.version }}
          output-file-url: true

      - name: Upload to R2 (DMG)
        if: ${{ github.event.inputs.deploy == 'true' }}
        uses: ryand56/r2-upload-action@latest
        id: r2-upload-dmg
        with:
          r2-account-id: ${{ secrets.R2_ACCOUNT_ID }}
          r2-access-key-id: ${{ secrets.R2_ACCESS_KEY_ID }}
          r2-secret-access-key: ${{ secrets.R2_SECRET_ACCESS_KEY }}
          r2-bucket: ${{ secrets.R2_BUCKET }}
          source-dir: src-tauri/target/universal-apple-darwin/release/bundle/dmg
          destination-dir: releases/${{ steps.package-version.outputs.version }}
          output-file-url: true

      - name: Debug R2 Upload Outputs
        if: ${{ github.event.inputs.deploy == 'true' }}
        run: |
          echo "DMG Upload Result: ${{ steps.r2-upload-dmg.outputs.result }}"
          echo "DMG Uploaded File URLs:"
          echo '${{ steps.r2-upload-dmg.outputs.file-urls }}' | jq -r .
          echo "Updater Upload Result: ${{ steps.r2-upload-updater.outputs.result }}"
          echo "Updater Uploaded File URLs:"
          echo '${{ steps.r2-upload-updater.outputs.file-urls }}' | jq -r .

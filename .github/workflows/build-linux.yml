name: Build Tauri App (Linux)

on:
  workflow_dispatch:

jobs:
  build-linux:
    permissions:
      contents: write
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - name: Install Bun
        run: curl -fsSL https://bun.sh/install | bash -s -- "bun-v1.1.13"
      - name: Add Bun to PATH
        run: echo "$HOME/.bun/bin" >> $GITHUB_PATH
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
      - name: Install Linux dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf
      - name: Install frontend dependencies
        run: bun install
      - name: Build and publish Tauri app
        uses: tauri-apps/tauri-action@v0
        id: tauri-build # Add an ID to reference outputs
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAURI_SIGNING_PRIVATE_KEY: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY }}
        with:
          tagName: v__VERSION__
          releaseName: "RepoSnap v__VERSION__ (Linux)"
          releaseBody: "Linux build (AppImage)."
          releaseDraft: true
          args: "--bundles appimage --verbose"

      - name: Debug Tauri Outputs
        run: |
          echo "Tauri version output: ${{ steps.tauri-build.outputs.version }}"
          echo "Release ID: ${{ steps.tauri-build.outputs.releaseId }}"
          if [ -z "${{ steps.tauri-build.outputs.version }}" ]; then
            VERSION=$(jq -r '.package.version' src-tauri/tauri.conf.json)
            echo "Fallback version from tauri.conf.json: $VERSION"
            echo "VERSION=$VERSION" >> $GITHUB_ENV
          else
            echo "VERSION=${{ steps.tauri-build.outputs.version }}" >> $GITHUB_ENV
          fi

      # Upload artifacts to Cloudflare R2
      - name: Upload to R2
        uses: ryand56/r2-upload-action@latest
        with:
          r2-account-id: ${{ secrets.R2_ACCOUNT_ID }}
          r2-access-key-id: ${{ secrets.R2_ACCESS_KEY_ID }}
          r2-secret-access-key: ${{ secrets.R2_SECRET_ACCESS_KEY }}
          r2-bucket: ${{ secrets.R2_BUCKET }}
          source-dir: src-tauri/target/release/bundle/appimage
          destination-dir: releases/${{ env.VERSION }}
          output-file-url: true

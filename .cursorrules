This is a Tauri app using bun and typescript/react on the front end.

It's meant to analyse a directory, get token counts for files of interset, and compile a file tree and file contents.

# ** UI **

The UI should be kept as simple and streamlined as possible. All heavy processing should be delegated to the rust back end. 


## UI Without open directories (tabs):
Show recent opened directories and an Open Folder button

## UI With open directories (tabs):

### Left side: 
    - Directory name
    - Token totals
    - Filters
    - File navigation + selection

### Right side:

Split into 3 sections:
- Top nav
- Selected file summary
- Treemap view

### Key UX Ideas

Users select files to include in their file set. 
The files are asynchronously tallied for token counts by rust.
The UI should be snappy and eager update, filling in token counts as they arrive.
The selected file summary provides sorting files based on token count for better analysis.
The treemap also provides additional analysis of files by token count.
The user can then copy the file tree plus concatenated selected files with the Copy button or Export to a markdown format.


## Main area

Token counts are calculated for each file and a sum is provided.
Files are shown by token counts.
Users can deselect from this view as well.

** Rust backend **

Responsible for file handling and processing and messaging for the UI.

## Other

Reference markdown documents for tauri can be found under /reference

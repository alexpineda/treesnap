name: Build Tauri App (macOS)

on:
  workflow_dispatch:
    inputs:
      deploy:
        description: "Deploy to R2"
        required: false
        type: boolean
        default: false

jobs:
  build-macos:
    permissions:
      contents: write
    strategy:
      matrix:
        target: ["aarch64-apple-darwin", "x86_64-apple-darwin"]
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - uses: oven-sh/setup-bun@v2

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Install frontend dependencies
        run: bun install

      - name: Build and publish Tauri app
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAURI_SIGNING_PRIVATE_KEY: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY }}
        with:
          tagName: v__VERSION__
          releaseName: "RepoSnap v__VERSION__ (macOS ${{ matrix.target }})"
          releaseBody: "macOS build for ${{ matrix.target }} (.dmg)."
          releaseDraft: true
          args: "--target ${{ matrix.target }} --bundles dmg --verbose"

      - name: Debug Tauri Outputs
        run: |
          echo "Tauri version output: ${{ steps.tauri-build.outputs.version }}"
          echo "Release ID: ${{ steps.tauri-build.outputs.releaseId }}"
          if [ -z "${{ steps.tauri-build.outputs.version }}" ]; then
            VERSION=$(jq -r '.version' src-tauri/tauri.conf.json)
            echo "Fallback version from tauri.conf.json: $VERSION"
            echo "VERSION=$VERSION" >> $GITHUB_ENV
          else
            echo "VERSION=${{ steps.tauri-build.outputs.version }}" >> $GITHUB_ENV
          fi

      #   - name: Clean Up Unneeded Build Artifacts
      #     run: |
      #       # Clean up any unnecessary files
      #       find src-tauri/target -type f -name "*.zip" -delete
      #       find src-tauri/target -type f -name "*.tar.gz" -delete

      - name: Upload to R2
        if: ${{ github.event.inputs.deploy == true }}
        uses: ryand56/r2-upload-action@latest
        with:
          r2-account-id: ${{ secrets.R2_ACCOUNT_ID }}
          r2-access-key-id: ${{ secrets.R2_ACCESS_KEY_ID }}
          r2-secret-access-key: ${{ secrets.R2_SECRET_ACCESS_KEY }}
          r2-bucket: ${{ secrets.R2_BUCKET }}
          source-dir: src-tauri/target/${{ matrix.target }}/release/bundle/dmg
          destination-dir: releases/${{ env.VERSION }}
          output-file-url: true
